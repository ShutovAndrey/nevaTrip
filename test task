# Тестовое задание #


### 1. Билеты на событие ###

После успешной покупки билетов на событие, данные попадают в список заказов.
Список заказов сохраняется в таблице phpMyAdmin в виде:


id  | event_id  | event_date          | ticket_adult_price  | ticket_adult_quantity  | ticket_kid_price  | ticket_kid_quantity  | barcode   | user_id  | equal_price  | created
--- | --------- | ------------------- | ------------------- | ---------------------- | ----------------- | -------------------- | --------  | -------- | ------------ | -------------------
1   | 003       | 2021-08-21 13:00:00 | 700                 | 1                      | 450               | 0                    | 11111111  | 00451    | 700          | 2021-01-11 13:22:09
2   | 006       | 2021-07-29 18:00:00 | 1000                | 0                      | 800               | 2                    | 22222222  | 00364    | 1600         | 2021-01-12 16:62:08
3   | 003       | 2021-08-15 17:00:00 | 700                 | 4                      | 450               | 3                    | 33333333  | 00015    | 4150         | 2021-01-13 10:08:45


Где:

* `id` - инкрементальный порядковый номер заказа
* `event_id` - уникальный ид события. У каждого события есть свое название, описание, расписание, цены и свой уникальный `event_id` соответственно
* `event_date` - дата и время на которое были куплены билеты
* `ticket_adult_price` - цена взрослого билета на момент покупки
* `ticket_adult_quantity` - количество купленных взрослых билетов в этом заказе
* `ticket_kid_price` - цена детского билета на момент покупки
* `ticket_kid_quantity` - количество купленных детских билетов в этом заказе
* `barcode` уникальный штрих код заказа
* `equal_price` - общая сумма заказа
* `created` - дата создания заказа

Вопросы:

1.   Некоторые события нужно продавать с дополнительными типами билетов - льготный и групповой, у которых будут свои цены и название. 
	 Имеется информация, что вероятно, будут другие типы билетов, которые нужно будет добавить. 
	 Нужно уметь сохранять при заказе 2 дополнительных типа билета, льготный и групповой в бд. 
	 **Задача** - Показать конечный вид таблицы с добавленными типами билетов. Объяснить свое решение.
	 
Ответ:

В данном случае я бы предложил создать дополнительную таблицу Tickets, в которой которой будет колонка type типа ENUM с содержанием типов билетов
(можно по умолчанию задать тип билета - взрослый), колонку с ценой и количеством переносим в нее, в Orders добавим суммарное количество билетов в заказе,
тогда таблица Orders будет иметь вид

id  | event_id  | event_date          | barcode   | user_id  | equal_price  | equal_quantity  | created
--- | --------- | ------------------- | -------------------- | -------------|---------------- | ------------------- 
1   | 003       | 2021-08-21 13:00:00 | 11111111  | 00451    | 1700         | 3               | 2021-01-11 13:22:09
2   | 006       | 2021-07-29 18:00:00 | 22222222  | 00364    | 1000         | 1               | 2021-01-12 16:62:08
3   | 003       | 2021-08-15 17:00:00 | 33333333  | 00015    | 400          | 2               | 2021-01-13 10:08:45

а таблица Tickets:

id  | order_id  | type             | quantity          | price    
--- | --------- | -----------------| ----------------- | -------
1   | 1         | adult            | 1                 | 800               
2   | 1         | child            | 2                 | 450               
3   | 2         | group            | 1                 | 1000               
4   | 3         | preferential     | 2                 | 200               

2.   Часто посетители из одного заказа приходят не одновременно на события. 
     Возникает необходимость чекинить их по отдельности. 
	 Для этого у каждого билета должен быть свой баркод. 
	 Если в одном заказе было куплено несколько билетов, 2 взрослых, 3 детских, 4 льготных - то должно быть 9 баркодов для каждого билета соответственно. 
	 **Задача** - Показать конечный вид таблицы, где у каждого билета свой баркод. Объяснить свое решение.

Ответ
в таблице Tickets будем отображать все билеты - добавится колонка barcode, убурем колонку quantity. 
Скорее всего при такой структуре колонка barcode у таблицы orders не нужна. Итого
Orders
id  | event_id  | event_date          | user_id  | equal_price  | equal_quantity  | created
--- | --------- | ------------------- | -------- | -------------|---------------- | ------------------- 
1   | 003       | 2021-08-21 13:00:00 | 00451    | 2250         | 4               | 2021-01-11 13:22:09
2   | 006       | 2021-07-29 18:00:00 | 00364    | 1000         | 1               | 2021-01-12 16:62:08
3   | 003       | 2021-08-15 17:00:00 | 00015    | 650          | 2               | 2021-01-13 10:08:45

Tickets

id  | order_id  | type             | barcode         | price    
--- | --------- | -----------------| --------------- | -------
1   | 1         | adult            | 1111111         | 800    
2   | 1         | preferential     | 2222222         | 200  
3   | 1         | adult            | 3333333         | 800  
4   | 1         | child            | 4444444         | 450               
5   | 2         | group            | 5555555         | 1000               
6   | 3         | preferential     | 6666666         | 200 
6   | 3         | child            | 7777777         | 450 


P.S. если бы использовался postreSQL то можно было бы использовать массивы
